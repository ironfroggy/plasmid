Release 1.3.0
-------------

- LocalStore.remove() triggers 'update' event on the store
- Results are now event-emitting objects
- Results trigger 'update' when refreshed

Release 1.2.1
-------------

- LocalStore.remove() accepts an object in addition to a key
- Improved browser support with LocalStore.remove()
- Add LocalStore.delete() alias to mirror IndexedDB API

Release 1.1.1 - April 30, 2016
------------------------------

- Improved error reporting for store operations

Release 1.1.0
-------------

Re-packaged for NPM

Release 0.2.0 - August 6, 2013
------------------------------

This marks the first stable release of the Plasmid JS library. The 0.2.x API should remain
unchanged, and may receive bug fixes. Any breaking features will go into the new development
branch and released in the 0.3.x line.

- Added meta() to add and read meta data associated with entries
- Added Result Watching, which causes query results to refresh when the store is updated
- Cleaned up add/put code

Release 0.1.4 - July 30, 2013
-----------------------------

- Cleaned up module layout
- Add previous pagination to result sets, and sub-page scrolling through results

Release 0.1.3 - June 1, 2013
----------------------------

- Added start and stop parameters to walk and fetch methods.
  start is inclusive, stop is exclusive. Both take indexes to skip an offset and stop once
  a limit is hit.
- Added a reverse parameter to walk and fetch filters, which when true reverses the result order
- The result of fetch()'s promise now has a next() method, which used in conjunction with
  the start and stop options will let you step over result pages. Every call to next() is a new
  fetch of results beginning with the next result in order.

Release 0.1.2 - May 30, 2013
----------------------------

Fixed a bug when calling walk() or fetch() without any filter value, or with an empty
object as a filter object. Can now use them in this way to walk or fetch all objects.

Release 0.1.1 - May 29, 2013
----------------------------

Fleshed out some basic test setup on the JS side, and cleaned up promises and filters.

- Deal with errors caused by invalid parameters opening a database, trigger errback
- Access an index wrapper by calling store.by(indexname). Indexes have the same API as stores,
  for reading.
- walk() no longer takes an index name
- walk() no longer results in an array, it only triggers each events on individual results
- fetch() captures all the results in an array
- walk() and fetch() take a filter value with gt (>), lt (<), gte (>=), or lte (<=) keys, or a
  combination, or a single value to filter equal to on the key or index.
- saving objects results in their (possibly randomized) key for retreival
- Added Promise.error() to set an error state on a promise
- Promises can only be resolved once, with ok() or error()
